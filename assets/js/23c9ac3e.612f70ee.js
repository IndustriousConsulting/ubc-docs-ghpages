"use strict";(self.webpackChunkubc_services=self.webpackChunkubc_services||[]).push([[6382],{8702:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=s(4848),t=s(8453);const o={},r="MQTT integration (UBC.mqtt)",a={id:"MQTT/documentation",title:"MQTT integration (UBC.mqtt)",description:"UBC - Unified Backend Connector comes with a component for acting as a MQTT client (over websocket), usable from 750 onwards. It enables real-time, fail safe messaging without having to handling with middlewares and topics like system availability, buffering, firewalls...",source:"@site/docs/MQTT/documentation.md",sourceDirName:"MQTT",slug:"/MQTT/documentation",permalink:"/MQTT/documentation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"ubcSidebar",previous:{title:"JSON integration (UBC.json)",permalink:"/JSON/documentation"},next:{title:"MES Integration",permalink:"/integrations/MES/documentation"}},l={},c=[{value:"MQTT client",id:"mqtt-client",level:2},{value:"Handler",id:"handler",level:3},{value:"Simple implementation",id:"simple-implementation",level:2},{value:"Setup",id:"setup",level:3},{value:"Handler implementation (Inbound)",id:"handler-implementation-inbound",level:3},{value:"Publish Message (Outbound)",id:"publish-message-outbound",level:3},{value:"Custom implementation",id:"custom-implementation",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"mqtt-integration-ubcmqtt",children:"MQTT integration (UBC.mqtt)"}),"\n",(0,i.jsxs)(n.p,{children:["UBC - Unified Backend Connector comes with a component for acting as a ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/MQTT",children:"MQTT"})," client (over websocket), usable from 750 onwards. It enables real-time, fail safe messaging without having to handling with middlewares and topics like system availability, buffering, firewalls...\nIn contrast to SAP standard's implementation, UBC.mqtt can work with ",(0,i.jsx)(n.a,{href:"https://www.hivemq.com/blog/mqtt-essentials-part-7-persistent-session-queuing-messages/",children:"persistent sessions"})," unlocking completely new capabilities of your SAP system, without the need to involve Middleware technology.\nThis document describes the technology and how-to integrate a new use-case."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Summary of the top most advantages using UBC.mqtt:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['no firewall issues, connection is established "from" the SAP system via MQTT ',(0,i.jsx)(n.strong,{children:"over websocket"}),' "inside out"']}),"\n",(0,i.jsx)(n.li,{children:'"clean session" configuration enables the use of persistent sessions, making the MQTT broker store the messages when disconnected.'}),"\n",(0,i.jsx)(n.li,{children:"available from 750 onwards"}),"\n",(0,i.jsx)(n.li,{children:"the only needed component is - of course - a MQTT broker where all the messages will be distributed to its clients"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Overview from a ",(0,i.jsx)(n.strong,{children:"SAP perspective"}),":"]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    autonumber\n    participant SAP as SAP MQTT Client\n    participant Client as Other MQTT Client\n    participant Broker as MQTT Broker\n\n    SAP ->> Broker: Initiate (CONNECT over websocket)\n    SAP ->> Broker: Subscribe to relevant topics (persistent session)\n    Client ->> Broker: Initiate (CONNECT)\n    Client ->> Broker: Send Message to a topic (PUBLISH)\n    Broker ->> SAP: Forward Message, because was subscribed to relevant topic\n    alt QoS <> at most once\n        SAP ->> Broker: Confirm the message was received\n    end\n    SAP ->> SAP: start asynchronous processing using bgRFC"}),"\n",(0,i.jsx)(n.h2,{id:"mqtt-client",children:"MQTT client"}),"\n",(0,i.jsx)(n.p,{children:"There are basically two options to set up UBC as a MQTT client. In common it behaves the same: Unlocking all MQTT possibilities for direct SAP connection:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['Running the client in a periodically scheduled job:\nIf the job is scheduled e.g. every minute, the client (SAP-UBC) connects to the broker, waits for messages for a predetermined number of seconds and then disconnects again.\nIt is not reasonable to configure a "clean session" for this scenario thus it always have to be persistent. (QOS >= 1)\nTemplate: ',(0,i.jsx)(n.code,{children:"/UBC/S17_MQTT_WS_CLIENT"})]}),"\n",(0,i.jsxs)(n.li,{children:["Running client as ABAP Daemon: An MQTT daemon runs once per client and keeps the web socket connection to the MQTT broker alive.\nIf there are any new messages, they get pushed immediately to your SAP system/MQTT client.\nThe daemon is a subclass of ",(0,i.jsx)(n.code,{children:"/UBC/CL_MQTT_DAEMON_ABS"})," and scheduled on its own. Daemons are available from S/4 HANA upwards. For ECC releases, daemons could not be used (use Job instead).\nThe daemon gets started with the system and reconnects to the broker. If the persistent session was chosen (QOS >= 1), messages will be received after connection was established.\nExample: ",(0,i.jsx)(n.code,{children:"/UBC/CL_S17_MQTT_DAEMON"})," for S1Seven use case`"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:['General recomendation: Use Daemons, if available in your system. Nevertheless, you cannot ensure your daemon is running 24/7 (due to downtimes, ...) thus it is also recommended to configure a "persistent session". In most of the cases, only one daemon per system is needed (not per client/application server) - restricted by server group (',(0,i.jsx)(n.code,{children:"RZ12"}),")."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For acting as a client (subscription/pull) there is the possibility to links handlers to topics. For publishing messages, only daemons offers out-of-the-box functionality: ",(0,i.jsx)(n.code,{children:"/ubc/if_mqtt_control_clnt_asy~publish"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"handler",children:"Handler"}),"\n",(0,i.jsxs)(n.p,{children:['Every "proxy"(endpoint) automatically registers to all topics specified in ',(0,i.jsx)(n.code,{children:"/UBC/CUSTOMIZING"})," chapter ",(0,i.jsx)(n.strong,{children:"MQTT handler configuration"})," for its Proxy type:\n",(0,i.jsx)(n.img,{alt:"MQTT handler configuration",src:s(228).A+"",width:"1251",height:"241"}),"\nBasically, you link a topic to its ",(0,i.jsx)(n.a,{href:"#handler",children:"implementation"})," and specify the ",(0,i.jsx)(n.a,{href:"https://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels/",children:"QoS (quality of service)"}),'. We recommend using "at least once" in order to ensure the message is received in SAP. (persistent session)\nAs soon as a message is received, it is transmitted to the bgRFC destination ',(0,i.jsx)(n.code,{children:"/UBC/INBOUND"}),". (The destination was created automatically on system setup for UBC, please see also transaction ",(0,i.jsx)(n.code,{children:"SBGRFCCONF"}),")\nThis mechanism makes use of parallelization depending on your scheduler and server group settings.\nThe bgRFC then executes the handler class specified before. Depending on the Quality-of-Service setting, the messages will be directly acknowledged after transmitting to bgRFC runtime. If there are any technical errors, please see SAP standard monitoring transaction ",(0,i.jsx)(n.code,{children:"SBGRFCMON"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For the handler implementation there are some generic super classes, your implementation can inherit from:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/UBC/CL_MQTT_HDL_REC_JSON_ABS"}),', if your payload is of type JSON. Please note, that the standard format is "lower case". If something different is needed, redefine method ',(0,i.jsx)(n.code,{children:"DESERIALIZE_MESSAGE"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/UBC/CL_MQTT_HDL_REC_STRING_A"}),", if your payload is of type STRING."]}),"\n",(0,i.jsxs)(n.li,{children:["for any other format, inherit from class ",(0,i.jsx)(n.code,{children:"/UBC/CL_MQTT_HDL_REC_ABS"}),". This forces to implement the deserialization of message format into ABAP within method ",(0,i.jsx)(n.code,{children:"DESERIALIZE_MESSAGE"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example for string:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-abap",children:'class zubc_cl_mqtt_msg_string definition\n  public\n  create public\n  inheriting from /ubc/cl_mqtt_hdl_rec_string_a.\n\n  public section.\n  protected section.\n    methods on_message redefinition.\n  private section.\nendclass.\n\nclass zubc_cl_mqtt_msg_string implementation.\n  method on_message.\n    data(lr_message) = ref string( iv_message ).\n\n    "todo process string\n  endmethod.\nendclass.\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The class ",(0,i.jsx)(n.code,{children:"ZUBC_CL_MQTT_MSG_STRING"})," will be specified in the customizing for a topic."]}),"\n",(0,i.jsx)(n.h2,{id:"simple-implementation",children:"Simple implementation"}),"\n",(0,i.jsx)(n.p,{children:'UBC comes with an out-of-the-box implementation for "simple" use cases, meaning the endpoint points to a MQTT broker only. Most of the time, this is the case.'}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.p,{children:["Run transaction ",(0,i.jsx)(n.code,{children:"/UBC/MQTT_SMPL_SETUP"}),". This configuration needs to be done on every system, as it does not get transported."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Configure Proxy\n",(0,i.jsx)(n.img,{alt:"Configure Proxy details",src:s(1855).A+"",width:"1276",height:"322"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Organiziation Id:"})," freely defined key, needs to be unique and identifies the actual use case\n",(0,i.jsx)(n.strong,{children:"MQTT over websocket endpoint:"})," FQN, pointing to MQTT endpoint of broker\n",(0,i.jsx)(n.strong,{children:"Username and password:"})," will be saved encrypted for the given organization id(proxy) and used to connect to the broker"]}),"\n",(0,i.jsxs)(n.li,{children:["MQTT daemon setup (daemon ",(0,i.jsx)(n.strong,{children:"or"})," job)","\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"recommended to use"})}),"\n",(0,i.jsx)(n.strong,{children:"RFC destination"}),": The daemon uses a RFC destination to log on, which needs to be provided. See ",(0,i.jsx)(n.a,{href:"https://help.sap.com/docs/ABAP_PLATFORM_NEW/753088fc00704d0a80e7fbd6803c8adb/18e0ad47009f48e197ca0abd7f70cf03.html",children:"here"})," for more details.\n",(0,i.jsx)(n.strong,{children:"server group"})," Also, it is recommended to specify a server group. Most of the time only on MQTT daemon needs to run in the system - not one per application server. Assign the server group only to one application server and specify in the configuration."]}),"\n",(0,i.jsxs)(n.li,{children:["Schedule MQTT job for asynchronous events (daemon ",(0,i.jsx)(n.strong,{children:"or"})," job)\nIf daemon cannot be used, specify period, user, language where the job will run.",(0,i.jsx)(n.br,{}),"\n","This step only schedules a job for report ",(0,i.jsx)(n.code,{children:"/UBC/MQTT_SIMPLE_WS_CLIENT"})," which can also be used for standalone test or scheduling in ",(0,i.jsx)(n.code,{children:"SM36"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"handler-implementation-inbound",children:"Handler implementation (Inbound)"}),"\n",(0,i.jsxs)(n.p,{children:["Just like as for any other implementation, see ",(0,i.jsx)(n.a,{href:"#handler",children:"Handler"}),": specify topics for proxy type ",(0,i.jsx)(n.code,{children:"MB"})," (MQTT broker, simple)."]}),"\n",(0,i.jsx)(n.h3,{id:"publish-message-outbound",children:"Publish Message (Outbound)"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Only supported for daemon. Also, the daemon needs to be running."})}),"\n",(0,i.jsxs)(n.p,{children:["For publishing a new message, simply call ",(0,i.jsx)(n.code,{children:"/UBC/CL_DAEMON_MQTT_SIMPLE=>FACTORY( )->PUBLISH( )"}),". Specifiy your organization id (given while configuration task) and the packet.\nExample:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-abap",children:"class zubc_cl_demo_publish definition\n  public\n  create public.\n\n  public section.\n    interfaces if_oo_adt_classrun.\n  protected section.\n  private section.\nendclass.\n\nclass zubc_cl_demo_publish implementation.\n  method if_oo_adt_classrun~main.\n    try.\n        \"prerequisite of course is a running daemon, exception if there is something wrong\n        /ubc/cl_daemon_mqtt_simple=>factory( )->publish(\n          is_proxy_key = value #( organization_id = 'YourBrokerOrgId' )\n          io_packet    = /ubc/cl_mqtt_packet_publish=>factory(\n                         )->set_qos_level( /ubc/if_mqtt_packet=>mc_qos-at_least_once\n                         )->set_message( value #( topic   = /ubc/cl_mqtt_topic=>factory( 'SAP/1' )\n                                                  message = cl_binary_convert=>string_to_xstring_utf8( 'test' ) ) ) ).\n      catch /ubc/cx_core into data(lx_core).\n        out->write( lx_core->get_text( ) ).\n    endtry.\n  endmethod.\nendclass.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"custom-implementation",children:"Custom implementation"}),"\n",(0,i.jsx)(n.p,{children:"If the requirement is, that behind some proxy there is a broker and some other systems (like for S1SEVEN), go for a custom implementation of the proxy."}),"\n",(0,i.jsxs)(n.p,{children:["In the Proxy implementation class, inheriting from /UBC/CL_PROXY, redefine method ",(0,i.jsx)(n.code,{children:"create_mqtt_client_config"})," by returning an object of type ",(0,i.jsx)(n.code,{children:"/UBC/IF_MQTT_CLIENT_CONFIG"}),".\nThis is needed for configuring, wether it has to be a persistent session, configuring the username/password (deriving from Proxy table), ...\nExample: ",(0,i.jsx)(n.code,{children:"/UBC/CL_S17_PROXY"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},228:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/image_001-1e59ef36f7e0e211b9d4933abfd2321e.png"},1855:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/image_002-ca6a9820e8a19102d97bac8062d87801.png"}}]);